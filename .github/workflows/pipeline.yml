name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  frontend-predeploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install deps
        run: npm ci
        working-directory: ./frontend
      - name: Lint
        run: npm run lint
        working-directory: ./frontend
      - name: Test
        run: npm test
        working-directory: ./frontend

  backend-predeploy:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: localUser
          POSTGRES_PASSWORD: localPassword
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout
          5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install deps
        run: npm ci
        working-directory: ./backend

      - name: Lint
        run: npm run lint
        working-directory: ./backend

      - name: Test
        run: npm test
        working-directory: ./backend
        env:
          POSTGRES_URL: postgresql://localUser:localPassword@localhost:5432/test
          REDIS_URL: redis://localhost:6379
          SECRET: ${{ secrets.SECRET }}
      - name: Build app
        run: npm run build
        working-directory: ./backend
  deploy:
    needs: [frontend-predeploy, backend-predeploy]
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install deps
        run: npm ci
        working-directory: ./backend
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: npm run build && flyctl deploy --remote-only
        working-directory: ./backend
